openapi: 3.0.3
info:
  title: Corkboard API
  description: API for managing chats, messages, and related users.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Test Server
tags:
  - name: user
    description: User management
  - name: chat
    description: Chat and message management
paths:
  /user:
    post:
      tags:
        - user
      summary: User login
      description: Users are logged in via the database.
      operationId: Userlogin
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User successfully logged in
          content:
            text/plain:
              schema:
                type: string
                example: "User successfully logged in"
        '403':
          description: Invalid username or password
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid username or password"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error"
  /newUser:
    post:
      tags:
        - user
      summary: Create new user
      description: Creates a new user in the database.
      operationId: newUser
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
      responses:
        '201':
          description: User created successfully
          content:
            text/plain:
              schema:
                type: string
                example: "User created successfully"
        '400':
          description: Username and password required
          content:
            text/plain:
              schema:
                type: string
                example: "Username and password required"
        '409':
          description: Username already in use
          content:
            text/plain:
              schema:
                type: string
                example: "Username already in use"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error"
  /updateInfo:
    put:
      tags:
        - user
      summary: Update user information
      description: Updates the information of an existing user such as email, name, and phone number.
      operationId: updateInfo
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                name:
                  type: string
                phone:
                  type: string
      responses:
        '201':
          description: User information updated successfully
          content:
            text/plain:
              schema:
                type: string
                example: "User information updated successfully"
        '400':
          description: User not found
          content:
            text/plain:
              schema:
                type: string
                example: "User not found"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error"
  /findUser:
    get:
      tags:
        - user
      summary: Find user by UserID
      description: Finds a user in the database by user ID and returns UserID and username.
      operationId: findUser
      parameters:
        - name: UserId
          in: query
          required: true
          schema:
            type: integer
      responses:
        '200':
          description: Query successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  userID:
                    type: string
                  username:
                    type: string
              examples:
                example:
                  value:
                    userID: "123"
                    username: "john_doe"
        '400':
          description: User not found
          content:
            text/plain:
              schema:
                type: string
                example: "User not found"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error"
  /addChat:
    post:
      tags:
        - chat
      summary: Create new chat
      description: Creates a new chat between two users.
      operationId: createChat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                User2:
                  type: string
      responses:
        '201':
          description: Chat created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  chatID:
                    type: integer
                    example: 123
                  message:
                    type: string
                    example: "Chat created successfully"
        '400':
          description: Missing user
          content:
            text/plain:
              schema:
                type: string
                example: "Missing user"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error"
  /removeChat:
    delete:
      tags:
        - chat
      summary: Delete chat
      description: Deletes an existing chat by chat ID from the database including all messages.
      operationId: deleteChat
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatID:
                  type: integer
      responses:
        '201':
          description: Chat deleted successfully
          content:
            text/plain:
              schema:
                type: string
                example: "Chat deleted successfully"
        '401':
          description: Invalid credentials
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid credentials"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error"
  /Message:
    post:
      tags:
        - chat
      summary: Save message
      description: Saves a message in a specific chat.
      operationId: saveMessage
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                ChatID:
                  type: integer
                SenderUserID:
                  type: integer
                ReceiverUserID:
                  type: integer
                TextMessage:
                  type: string
      responses:
        '201':
          description: Message saved successfully
          content:
            text/plain:
              schema:
                type: string
                example: "Message saved successfully"
        '401':
          description: Invalid credentials
          content:
            text/plain:
              schema:
                type: string
                example: "Invalid credentials"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error"
  /Chat:
    get:
      tags:
        - chat
      summary: Retrieve chat
      description: Retrieves all messages of a specific chat by chat ID.
      operationId: getChat
      parameters:
        - name: ChatID
          in: query
          required: true
          schema:
            type: integer
      responses:
        '201':
          description: Query successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  chatHistory:
                    type: array
                    items:
                      $ref: '#/components/schemas/Message'
                  message:
                    type: string
                    example: "Chat retrieved"
        '500':
          description: Internal server error
          content:
            text/plain:
              schema:
                type: string
                example: "Internal server error"
components:
  schemas:
    User:
      type: object
      properties:
        id:
          type: integer
        username:
          type: string
        password:
          type: string
        email:
          type: string
        name:
          type: string
        phone:
          type: string
    Message:
      type: object
      properties:
        ChatID:
          type: integer
        SenderUserID:
          type: integer
        TextMessage:
          type: string
        Timestamp:
          type: string
